[{"path":"https://posit-dev.github.io/r-shinylive/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 shinylive authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Barret Schloerke. Author, maintainer. Winston Chang. Author. George Stagg. Contributor. . Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schloerke B, Chang W (2023). shinylive: Run Shiny applications browser. https://posit-dev.github.io/r-shinylive/, https://github.com/posit-dev/r-shinylive.","code":"@Manual{,   title = {shinylive: Run Shiny applications in the browser},   author = {Barret Schloerke and Winston Chang},   year = {2023},   note = {https://posit-dev.github.io/r-shinylive/, https://github.com/posit-dev/r-shinylive}, }"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"shinylive","dir":"","previous_headings":"","what":"Run Shiny applications in the browser","title":"Run Shiny applications in the browser","text":"goal shinylive … TODO-barret; document","code":""},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Run Shiny applications in the browser","text":"can install development version shinylive GitHub via:","code":"# install.packages(\"pak\") pak::pak(\"posit-dev/r-shinylive\")"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Run Shiny applications in the browser","text":"basic example export shiny app directory can hosted locally:","code":"library(shinylive)  app_dir <- system.file(\"examples\", \"01_hello\", package=\"shiny\") out_dir <- tempfile(\"shinylive-export\")  # Export the app to a directory export(app_dir, out_dir) #> Run the following in an R session to serve the app: #>   httpuv::runStaticServer(<OUT_DIR>, port=8008)  # Serve the exported directory httpuv::runStaticServer(out_dir, port=8008)"},{"path":[]},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"testing","dir":"","previous_headings":"Development","what":"Testing","title":"Run Shiny applications in the browser","text":"Works latest GitHub version posit-dev/shinylive@r-shinylive-support. Export local app dir run :","code":"shinylive::link_shinylive_local(\"PATH/TO/posit-dev/shinylive\") pkgload::load_all() # Delete prior unlink(\"local/shiny-apps-out/\") export(\"local/shiny-apps/simple-r\", \"local/shiny-apps-out\") #> Run the following in an R session to serve the app: #>   httpuv::runStaticServer(\"local/shiny-apps-out\", port=8008)  # Host the local directory httpuv::runStaticServer(\"local/shiny-apps-out\", port=8008)"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"todo-barret","dir":"","previous_headings":"","what":"TODO-barret","title":"Run Shiny applications in the browser","text":"TODO-barret; document readme quarto_ext_call(c(“base-deps”, “–sw-dir”, “asdfasfd”)) quarto_ext_call(c(“package-deps”)) quarto_ext_call(c(“codeblock--json-path”)) Remove pkgload::load_all() call","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage shinylive assets — assets_download","title":"Manage shinylive assets — assets_download","text":"Helper methods managing shinylive assets.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage shinylive assets — assets_download","text":"","code":"assets_download(   version = assets_version(),   ...,   dir = assets_cache_dir(),   url = assets_bundle_url(version) )  assets_ensure(   version = assets_version(),   ...,   dir = assets_cache_dir(),   url = assets_bundle_url(version) )  assets_cleanup(dir = assets_cache_dir())  assets_info()  assets_version()"},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage shinylive assets — assets_download","text":"version version assets download. ... Ignored. dir asset cache directory. Unless testing, default behavior used. url URL download assets . Unless testing, default behavior used.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Manage shinylive assets — assets_download","text":"assets_download(): Downloads shinylive assets bundle GitHub extracts specified directory. bundle always downloaded GitHub, even already exists cache directory (dir=). assets_ensure(): Ensures local copy shinylive installed. local copy shinylive installed, downloaded installed. local copy shinylive installed, path returned. assets_cleanup(): Removes local copies shinylive web assets, except one used current version shinylive. assets_info(): Prints information local shinylive assets installed. assets_version(): Returns version currently supported Shinylive assets version.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a Shiny app to a directory — export","title":"Export a Shiny app to a directory — export","text":"function exports Shiny app directory, can served using httpuv::runStaticServer().","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a Shiny app to a directory — export","text":"","code":"export(appdir, destdir, ..., subdir = \"\", verbose = FALSE)"},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a Shiny app to a directory — export","text":"appdir Directory containing application. destdir Destination directory. ... Ignored subdir Subdirectory destdir write app . verbose Print verbose output.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a Shiny app to a directory — export","text":"","code":"if (FALSE) { app_dir <- system.file(\"examples\", \"01_hello\", package=\"shiny\") out_dir <- tempfile(\"shinylive-export\")  # Export the app to a directory export(app_dir, out_dir) #> Run the following in an R session to serve the app: #>   httpuv::runStaticServer(<OUT_DIR>, port=8008)  # Serve the exported directory httpuv::runStaticServer(out_dir, port=8008) }"},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install shinylive assets from from a local directory — assets_install_copy","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"Helper methods testing updates shinylive assets.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"","code":"assets_install_copy(   assets_repo_dir,   ...,   dir = assets_cache_dir(),   version = package_json_version(assets_repo_dir) )  assets_install_link(   assets_repo_dir,   ...,   dir = assets_cache_dir(),   version = package_json_version(assets_repo_dir) )"},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"assets_repo_dir local repository directory shinylive assets (e.g. posit-dev/shinylive) ... Ignored. dir asset cache directory. Unless testing, default behavior used. version version assets installed.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"assets_install_copy(): Copyies shinylive assets local directory. must repeated change assets. assets_install_link(): Creates symlink local shinylive assets cached assets directory. first installation, assets source due symlink.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/r-shinylive/reference/quarto_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarto extension for shinylive — quarto_ext","title":"Quarto extension for shinylive — quarto_ext","text":"Quarto extension shinylive","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/quarto_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarto extension for shinylive — quarto_ext","text":"","code":"quarto_ext(args = commandArgs(trailingOnly = TRUE))"},{"path":"https://posit-dev.github.io/r-shinylive/reference/quarto_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quarto extension for shinylive — quarto_ext","text":"args Command line arguments passed extension. first argument can one : codeblock--json-path: Prints path codeblock--json.js script. base-deps: Prints base dependencies JSON array. package-deps: Prints package dependencies JSON array. Currently, returns empty array webr handling package dependencies.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/quarto_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quarto extension for shinylive — quarto_ext","text":"JSON string printed ingested extension.","code":""}]
